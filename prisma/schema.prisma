generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Interview {
  id                 String     @id @default(cuid())
  jobTitle           String
  experienceLevel    String
  jobDescription     String
  companyDescription String
  requiredSkills     String[]
  difficultyLevel    String
  questionTypes      String
  createdAt          DateTime   @default(now())
  generatedQuestions Question[]
  mockQuestions     MockModel[]
  answerEmbeddings   AnswerEmbedding[]
  feedback           Json?
  userId            String
}

model Question {
  id          String    @id @default(cuid())
  text        String
  aiAnswer    String?
  userAnswer  String?
  feedback    Json?
  interviewId String
  interview   Interview @relation(fields: [interviewId], references: [id])
}

model MockModel {
  id           String   @id @default(cuid())
  text         String
  sender       Sender
  interviewId  String
  interview    Interview @relation(fields: [interviewId], references: [id])
  createdAt    DateTime @default(now())
  answerEmbedding AnswerEmbedding?
}

enum Sender {
  interviewer
  candidate
}

model AnswerEmbedding {
  id           String   @id @default(uuid())
  answerText   String
  embedding    Float[] 
  mockModel     MockModel @relation(fields: [mockModelId], references: [id])
  mockModelId   String @unique
  interview    Interview @relation(fields: [interviewId], references: [id])
  interviewId  String 
  createdAt    DateTime @default(now())

  @@index([interviewId])
  @@index([mockModelId])
}

model Subscription {
  id         Int      @id @default(autoincrement())
  email      String   @unique
  createdAt  DateTime @default(now())
}


